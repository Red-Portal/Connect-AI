// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: rpc_message.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include <board_platformer/detail/rpc_message.pb.h>

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
class point_tDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<point_t> {
} _point_t_default_instance_;
class point_state_tDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<point_state_t> {
} _point_state_t_default_instance_;
class board_stateDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<board_state> {
} _board_state_default_instance_;
class player_moveDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<player_move> {
} _player_move_default_instance_;

namespace protobuf_rpc_5fmessage_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[4];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(point_t, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(point_t, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(point_t, y_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(point_state_t, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(point_state_t, point_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(point_state_t, unit_type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(board_state, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(board_state, time_limit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(board_state, point_state_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(player_move, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(player_move, unit_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(player_move, move_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(point_t)},
  { 7, -1, sizeof(point_state_t)},
  { 14, -1, sizeof(board_state)},
  { 21, -1, sizeof(player_move)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_point_t_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_point_state_t_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_board_state_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_player_move_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "rpc_message.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

}  // namespace

void TableStruct::Shutdown() {
  _point_t_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _point_state_t_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _board_state_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _player_move_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _point_t_default_instance_.DefaultConstruct();
  _point_state_t_default_instance_.DefaultConstruct();
  _board_state_default_instance_.DefaultConstruct();
  _player_move_default_instance_.DefaultConstruct();
  _point_state_t_default_instance_.get_mutable()->point_ = const_cast< ::point_t*>(
      ::point_t::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\021rpc_message.proto\"\037\n\007point_t\022\t\n\001x\030\001 \001("
      "\005\022\t\n\001y\030\002 \001(\005\";\n\rpoint_state_t\022\027\n\005point\030\001"
      " \001(\0132\010.point_t\022\021\n\tunit_type\030\002 \001(\005\"F\n\013boa"
      "rd_state\022\022\n\ntime_limit\030\001 \001(\003\022#\n\013point_st"
      "ate\030\002 \003(\0132\016.point_state_t\">\n\013player_move"
      "\022\021\n\tunit_type\030\001 \001(\005\022\034\n\004move\030\002 \003(\0132\016.poin"
      "t_state_t2I\n\025board_platformer_comm\0220\n\020se"
      "nd_board_state\022\014.board_state\032\014.player_mo"
      "ve\"\000b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 332);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "rpc_message.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_rpc_5fmessage_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int point_t::kXFieldNumber;
const int point_t::kYFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

point_t::point_t()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_rpc_5fmessage_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:point_t)
}
point_t::point_t(const point_t& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    reinterpret_cast<char*>(&y_) -
    reinterpret_cast<char*>(&x_) + sizeof(y_));
  // @@protoc_insertion_point(copy_constructor:point_t)
}

void point_t::SharedCtor() {
  ::memset(&x_, 0, reinterpret_cast<char*>(&y_) -
    reinterpret_cast<char*>(&x_) + sizeof(y_));
  _cached_size_ = 0;
}

point_t::~point_t() {
  // @@protoc_insertion_point(destructor:point_t)
  SharedDtor();
}

void point_t::SharedDtor() {
}

void point_t::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* point_t::descriptor() {
  protobuf_rpc_5fmessage_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_rpc_5fmessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const point_t& point_t::default_instance() {
  protobuf_rpc_5fmessage_2eproto::InitDefaults();
  return *internal_default_instance();
}

point_t* point_t::New(::google::protobuf::Arena* arena) const {
  point_t* n = new point_t;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void point_t::Clear() {
// @@protoc_insertion_point(message_clear_start:point_t)
  ::memset(&x_, 0, reinterpret_cast<char*>(&y_) -
    reinterpret_cast<char*>(&x_) + sizeof(y_));
}

bool point_t::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:point_t)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:point_t)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:point_t)
  return false;
#undef DO_
}

void point_t::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:point_t)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 x = 1;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->x(), output);
  }

  // int32 y = 2;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->y(), output);
  }

  // @@protoc_insertion_point(serialize_end:point_t)
}

::google::protobuf::uint8* point_t::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:point_t)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 x = 1;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->x(), target);
  }

  // int32 y = 2;
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->y(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:point_t)
  return target;
}

size_t point_t::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:point_t)
  size_t total_size = 0;

  // int32 x = 1;
  if (this->x() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->x());
  }

  // int32 y = 2;
  if (this->y() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->y());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void point_t::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:point_t)
  GOOGLE_DCHECK_NE(&from, this);
  const point_t* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const point_t>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:point_t)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:point_t)
    MergeFrom(*source);
  }
}

void point_t::MergeFrom(const point_t& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:point_t)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
}

void point_t::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:point_t)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void point_t::CopyFrom(const point_t& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:point_t)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool point_t::IsInitialized() const {
  return true;
}

void point_t::Swap(point_t* other) {
  if (other == this) return;
  InternalSwap(other);
}
void point_t::InternalSwap(point_t* other) {
  std::swap(x_, other->x_);
  std::swap(y_, other->y_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata point_t::GetMetadata() const {
  protobuf_rpc_5fmessage_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_rpc_5fmessage_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// point_t

// int32 x = 1;
void point_t::clear_x() {
  x_ = 0;
}
::google::protobuf::int32 point_t::x() const {
  // @@protoc_insertion_point(field_get:point_t.x)
  return x_;
}
void point_t::set_x(::google::protobuf::int32 value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:point_t.x)
}

// int32 y = 2;
void point_t::clear_y() {
  y_ = 0;
}
::google::protobuf::int32 point_t::y() const {
  // @@protoc_insertion_point(field_get:point_t.y)
  return y_;
}
void point_t::set_y(::google::protobuf::int32 value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:point_t.y)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int point_state_t::kPointFieldNumber;
const int point_state_t::kUnitTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

point_state_t::point_state_t()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_rpc_5fmessage_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:point_state_t)
}
point_state_t::point_state_t(const point_state_t& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_point()) {
    point_ = new ::point_t(*from.point_);
  } else {
    point_ = NULL;
  }
  unit_type_ = from.unit_type_;
  // @@protoc_insertion_point(copy_constructor:point_state_t)
}

void point_state_t::SharedCtor() {
  ::memset(&point_, 0, reinterpret_cast<char*>(&unit_type_) -
    reinterpret_cast<char*>(&point_) + sizeof(unit_type_));
  _cached_size_ = 0;
}

point_state_t::~point_state_t() {
  // @@protoc_insertion_point(destructor:point_state_t)
  SharedDtor();
}

void point_state_t::SharedDtor() {
  if (this != internal_default_instance()) {
    delete point_;
  }
}

void point_state_t::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* point_state_t::descriptor() {
  protobuf_rpc_5fmessage_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_rpc_5fmessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const point_state_t& point_state_t::default_instance() {
  protobuf_rpc_5fmessage_2eproto::InitDefaults();
  return *internal_default_instance();
}

point_state_t* point_state_t::New(::google::protobuf::Arena* arena) const {
  point_state_t* n = new point_state_t;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void point_state_t::Clear() {
// @@protoc_insertion_point(message_clear_start:point_state_t)
  if (GetArenaNoVirtual() == NULL && point_ != NULL) {
    delete point_;
  }
  point_ = NULL;
  unit_type_ = 0;
}

bool point_state_t::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:point_state_t)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .point_t point = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_point()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 unit_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &unit_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:point_state_t)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:point_state_t)
  return false;
#undef DO_
}

void point_state_t::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:point_state_t)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .point_t point = 1;
  if (this->has_point()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->point_, output);
  }

  // int32 unit_type = 2;
  if (this->unit_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->unit_type(), output);
  }

  // @@protoc_insertion_point(serialize_end:point_state_t)
}

::google::protobuf::uint8* point_state_t::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:point_state_t)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .point_t point = 1;
  if (this->has_point()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->point_, deterministic, target);
  }

  // int32 unit_type = 2;
  if (this->unit_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->unit_type(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:point_state_t)
  return target;
}

size_t point_state_t::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:point_state_t)
  size_t total_size = 0;

  // .point_t point = 1;
  if (this->has_point()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->point_);
  }

  // int32 unit_type = 2;
  if (this->unit_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->unit_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void point_state_t::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:point_state_t)
  GOOGLE_DCHECK_NE(&from, this);
  const point_state_t* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const point_state_t>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:point_state_t)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:point_state_t)
    MergeFrom(*source);
  }
}

void point_state_t::MergeFrom(const point_state_t& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:point_state_t)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_point()) {
    mutable_point()->::point_t::MergeFrom(from.point());
  }
  if (from.unit_type() != 0) {
    set_unit_type(from.unit_type());
  }
}

void point_state_t::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:point_state_t)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void point_state_t::CopyFrom(const point_state_t& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:point_state_t)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool point_state_t::IsInitialized() const {
  return true;
}

void point_state_t::Swap(point_state_t* other) {
  if (other == this) return;
  InternalSwap(other);
}
void point_state_t::InternalSwap(point_state_t* other) {
  std::swap(point_, other->point_);
  std::swap(unit_type_, other->unit_type_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata point_state_t::GetMetadata() const {
  protobuf_rpc_5fmessage_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_rpc_5fmessage_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// point_state_t

// .point_t point = 1;
bool point_state_t::has_point() const {
  return this != internal_default_instance() && point_ != NULL;
}
void point_state_t::clear_point() {
  if (GetArenaNoVirtual() == NULL && point_ != NULL) delete point_;
  point_ = NULL;
}
const ::point_t& point_state_t::point() const {
  // @@protoc_insertion_point(field_get:point_state_t.point)
  return point_ != NULL ? *point_
                         : *::point_t::internal_default_instance();
}
::point_t* point_state_t::mutable_point() {
  
  if (point_ == NULL) {
    point_ = new ::point_t;
  }
  // @@protoc_insertion_point(field_mutable:point_state_t.point)
  return point_;
}
::point_t* point_state_t::release_point() {
  // @@protoc_insertion_point(field_release:point_state_t.point)
  
  ::point_t* temp = point_;
  point_ = NULL;
  return temp;
}
void point_state_t::set_allocated_point(::point_t* point) {
  delete point_;
  point_ = point;
  if (point) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:point_state_t.point)
}

// int32 unit_type = 2;
void point_state_t::clear_unit_type() {
  unit_type_ = 0;
}
::google::protobuf::int32 point_state_t::unit_type() const {
  // @@protoc_insertion_point(field_get:point_state_t.unit_type)
  return unit_type_;
}
void point_state_t::set_unit_type(::google::protobuf::int32 value) {
  
  unit_type_ = value;
  // @@protoc_insertion_point(field_set:point_state_t.unit_type)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int board_state::kTimeLimitFieldNumber;
const int board_state::kPointStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

board_state::board_state()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_rpc_5fmessage_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:board_state)
}
board_state::board_state(const board_state& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      point_state_(from.point_state_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  time_limit_ = from.time_limit_;
  // @@protoc_insertion_point(copy_constructor:board_state)
}

void board_state::SharedCtor() {
  time_limit_ = GOOGLE_LONGLONG(0);
  _cached_size_ = 0;
}

board_state::~board_state() {
  // @@protoc_insertion_point(destructor:board_state)
  SharedDtor();
}

void board_state::SharedDtor() {
}

void board_state::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* board_state::descriptor() {
  protobuf_rpc_5fmessage_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_rpc_5fmessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const board_state& board_state::default_instance() {
  protobuf_rpc_5fmessage_2eproto::InitDefaults();
  return *internal_default_instance();
}

board_state* board_state::New(::google::protobuf::Arena* arena) const {
  board_state* n = new board_state;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void board_state::Clear() {
// @@protoc_insertion_point(message_clear_start:board_state)
  point_state_.Clear();
  time_limit_ = GOOGLE_LONGLONG(0);
}

bool board_state::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:board_state)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 time_limit = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &time_limit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .point_state_t point_state = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_point_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:board_state)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:board_state)
  return false;
#undef DO_
}

void board_state::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:board_state)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 time_limit = 1;
  if (this->time_limit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->time_limit(), output);
  }

  // repeated .point_state_t point_state = 2;
  for (unsigned int i = 0, n = this->point_state_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->point_state(i), output);
  }

  // @@protoc_insertion_point(serialize_end:board_state)
}

::google::protobuf::uint8* board_state::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:board_state)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 time_limit = 1;
  if (this->time_limit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->time_limit(), target);
  }

  // repeated .point_state_t point_state = 2;
  for (unsigned int i = 0, n = this->point_state_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->point_state(i), deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:board_state)
  return target;
}

size_t board_state::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:board_state)
  size_t total_size = 0;

  // repeated .point_state_t point_state = 2;
  {
    unsigned int count = this->point_state_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->point_state(i));
    }
  }

  // int64 time_limit = 1;
  if (this->time_limit() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->time_limit());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void board_state::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:board_state)
  GOOGLE_DCHECK_NE(&from, this);
  const board_state* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const board_state>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:board_state)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:board_state)
    MergeFrom(*source);
  }
}

void board_state::MergeFrom(const board_state& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:board_state)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  point_state_.MergeFrom(from.point_state_);
  if (from.time_limit() != 0) {
    set_time_limit(from.time_limit());
  }
}

void board_state::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:board_state)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void board_state::CopyFrom(const board_state& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:board_state)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool board_state::IsInitialized() const {
  return true;
}

void board_state::Swap(board_state* other) {
  if (other == this) return;
  InternalSwap(other);
}
void board_state::InternalSwap(board_state* other) {
  point_state_.InternalSwap(&other->point_state_);
  std::swap(time_limit_, other->time_limit_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata board_state::GetMetadata() const {
  protobuf_rpc_5fmessage_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_rpc_5fmessage_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// board_state

// int64 time_limit = 1;
void board_state::clear_time_limit() {
  time_limit_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 board_state::time_limit() const {
  // @@protoc_insertion_point(field_get:board_state.time_limit)
  return time_limit_;
}
void board_state::set_time_limit(::google::protobuf::int64 value) {
  
  time_limit_ = value;
  // @@protoc_insertion_point(field_set:board_state.time_limit)
}

// repeated .point_state_t point_state = 2;
int board_state::point_state_size() const {
  return point_state_.size();
}
void board_state::clear_point_state() {
  point_state_.Clear();
}
const ::point_state_t& board_state::point_state(int index) const {
  // @@protoc_insertion_point(field_get:board_state.point_state)
  return point_state_.Get(index);
}
::point_state_t* board_state::mutable_point_state(int index) {
  // @@protoc_insertion_point(field_mutable:board_state.point_state)
  return point_state_.Mutable(index);
}
::point_state_t* board_state::add_point_state() {
  // @@protoc_insertion_point(field_add:board_state.point_state)
  return point_state_.Add();
}
::google::protobuf::RepeatedPtrField< ::point_state_t >*
board_state::mutable_point_state() {
  // @@protoc_insertion_point(field_mutable_list:board_state.point_state)
  return &point_state_;
}
const ::google::protobuf::RepeatedPtrField< ::point_state_t >&
board_state::point_state() const {
  // @@protoc_insertion_point(field_list:board_state.point_state)
  return point_state_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int player_move::kUnitTypeFieldNumber;
const int player_move::kMoveFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

player_move::player_move()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_rpc_5fmessage_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:player_move)
}
player_move::player_move(const player_move& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      move_(from.move_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  unit_type_ = from.unit_type_;
  // @@protoc_insertion_point(copy_constructor:player_move)
}

void player_move::SharedCtor() {
  unit_type_ = 0;
  _cached_size_ = 0;
}

player_move::~player_move() {
  // @@protoc_insertion_point(destructor:player_move)
  SharedDtor();
}

void player_move::SharedDtor() {
}

void player_move::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* player_move::descriptor() {
  protobuf_rpc_5fmessage_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_rpc_5fmessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const player_move& player_move::default_instance() {
  protobuf_rpc_5fmessage_2eproto::InitDefaults();
  return *internal_default_instance();
}

player_move* player_move::New(::google::protobuf::Arena* arena) const {
  player_move* n = new player_move;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void player_move::Clear() {
// @@protoc_insertion_point(message_clear_start:player_move)
  move_.Clear();
  unit_type_ = 0;
}

bool player_move::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:player_move)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 unit_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &unit_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .point_state_t move = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_move()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:player_move)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:player_move)
  return false;
#undef DO_
}

void player_move::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:player_move)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 unit_type = 1;
  if (this->unit_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->unit_type(), output);
  }

  // repeated .point_state_t move = 2;
  for (unsigned int i = 0, n = this->move_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->move(i), output);
  }

  // @@protoc_insertion_point(serialize_end:player_move)
}

::google::protobuf::uint8* player_move::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:player_move)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 unit_type = 1;
  if (this->unit_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->unit_type(), target);
  }

  // repeated .point_state_t move = 2;
  for (unsigned int i = 0, n = this->move_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->move(i), deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:player_move)
  return target;
}

size_t player_move::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:player_move)
  size_t total_size = 0;

  // repeated .point_state_t move = 2;
  {
    unsigned int count = this->move_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->move(i));
    }
  }

  // int32 unit_type = 1;
  if (this->unit_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->unit_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void player_move::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:player_move)
  GOOGLE_DCHECK_NE(&from, this);
  const player_move* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const player_move>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:player_move)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:player_move)
    MergeFrom(*source);
  }
}

void player_move::MergeFrom(const player_move& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:player_move)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  move_.MergeFrom(from.move_);
  if (from.unit_type() != 0) {
    set_unit_type(from.unit_type());
  }
}

void player_move::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:player_move)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void player_move::CopyFrom(const player_move& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:player_move)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool player_move::IsInitialized() const {
  return true;
}

void player_move::Swap(player_move* other) {
  if (other == this) return;
  InternalSwap(other);
}
void player_move::InternalSwap(player_move* other) {
  move_.InternalSwap(&other->move_);
  std::swap(unit_type_, other->unit_type_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata player_move::GetMetadata() const {
  protobuf_rpc_5fmessage_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_rpc_5fmessage_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// player_move

// int32 unit_type = 1;
void player_move::clear_unit_type() {
  unit_type_ = 0;
}
::google::protobuf::int32 player_move::unit_type() const {
  // @@protoc_insertion_point(field_get:player_move.unit_type)
  return unit_type_;
}
void player_move::set_unit_type(::google::protobuf::int32 value) {
  
  unit_type_ = value;
  // @@protoc_insertion_point(field_set:player_move.unit_type)
}

// repeated .point_state_t move = 2;
int player_move::move_size() const {
  return move_.size();
}
void player_move::clear_move() {
  move_.Clear();
}
const ::point_state_t& player_move::move(int index) const {
  // @@protoc_insertion_point(field_get:player_move.move)
  return move_.Get(index);
}
::point_state_t* player_move::mutable_move(int index) {
  // @@protoc_insertion_point(field_mutable:player_move.move)
  return move_.Mutable(index);
}
::point_state_t* player_move::add_move() {
  // @@protoc_insertion_point(field_add:player_move.move)
  return move_.Add();
}
::google::protobuf::RepeatedPtrField< ::point_state_t >*
player_move::mutable_move() {
  // @@protoc_insertion_point(field_mutable_list:player_move.move)
  return &move_;
}
const ::google::protobuf::RepeatedPtrField< ::point_state_t >&
player_move::move() const {
  // @@protoc_insertion_point(field_list:player_move.move)
  return move_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
