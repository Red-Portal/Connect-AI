// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: rpc_message.proto

#ifndef PROTOBUF_rpc_5fmessage_2eproto__INCLUDED
#define PROTOBUF_rpc_5fmessage_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003002 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
class board_state;
class board_stateDefaultTypeInternal;
extern board_stateDefaultTypeInternal _board_state_default_instance_;
class player_move;
class player_moveDefaultTypeInternal;
extern player_moveDefaultTypeInternal _player_move_default_instance_;
class point_state_t;
class point_state_tDefaultTypeInternal;
extern point_state_tDefaultTypeInternal _point_state_t_default_instance_;
class point_t;
class point_tDefaultTypeInternal;
extern point_tDefaultTypeInternal _point_t_default_instance_;

namespace protobuf_rpc_5fmessage_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_rpc_5fmessage_2eproto

// ===================================================================

class point_t : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:point_t) */ {
 public:
  point_t();
  virtual ~point_t();

  point_t(const point_t& from);

  inline point_t& operator=(const point_t& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const point_t& default_instance();

  static inline const point_t* internal_default_instance() {
    return reinterpret_cast<const point_t*>(
               &_point_t_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(point_t* other);

  // implements Message ----------------------------------------------

  inline point_t* New() const PROTOBUF_FINAL { return New(NULL); }

  point_t* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const point_t& from);
  void MergeFrom(const point_t& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(point_t* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 x = 1;
  void clear_x();
  static const int kXFieldNumber = 1;
  ::google::protobuf::int32 x() const;
  void set_x(::google::protobuf::int32 value);

  // int32 y = 2;
  void clear_y();
  static const int kYFieldNumber = 2;
  ::google::protobuf::int32 y() const;
  void set_y(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:point_t)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 x_;
  ::google::protobuf::int32 y_;
  mutable int _cached_size_;
  friend struct protobuf_rpc_5fmessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class point_state_t : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:point_state_t) */ {
 public:
  point_state_t();
  virtual ~point_state_t();

  point_state_t(const point_state_t& from);

  inline point_state_t& operator=(const point_state_t& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const point_state_t& default_instance();

  static inline const point_state_t* internal_default_instance() {
    return reinterpret_cast<const point_state_t*>(
               &_point_state_t_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(point_state_t* other);

  // implements Message ----------------------------------------------

  inline point_state_t* New() const PROTOBUF_FINAL { return New(NULL); }

  point_state_t* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const point_state_t& from);
  void MergeFrom(const point_state_t& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(point_state_t* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .point_t point = 1;
  bool has_point() const;
  void clear_point();
  static const int kPointFieldNumber = 1;
  const ::point_t& point() const;
  ::point_t* mutable_point();
  ::point_t* release_point();
  void set_allocated_point(::point_t* point);

  // int32 unit_type = 2;
  void clear_unit_type();
  static const int kUnitTypeFieldNumber = 2;
  ::google::protobuf::int32 unit_type() const;
  void set_unit_type(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:point_state_t)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::point_t* point_;
  ::google::protobuf::int32 unit_type_;
  mutable int _cached_size_;
  friend struct protobuf_rpc_5fmessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class board_state : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:board_state) */ {
 public:
  board_state();
  virtual ~board_state();

  board_state(const board_state& from);

  inline board_state& operator=(const board_state& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const board_state& default_instance();

  static inline const board_state* internal_default_instance() {
    return reinterpret_cast<const board_state*>(
               &_board_state_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(board_state* other);

  // implements Message ----------------------------------------------

  inline board_state* New() const PROTOBUF_FINAL { return New(NULL); }

  board_state* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const board_state& from);
  void MergeFrom(const board_state& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(board_state* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .point_state_t point_state = 2;
  int point_state_size() const;
  void clear_point_state();
  static const int kPointStateFieldNumber = 2;
  const ::point_state_t& point_state(int index) const;
  ::point_state_t* mutable_point_state(int index);
  ::point_state_t* add_point_state();
  ::google::protobuf::RepeatedPtrField< ::point_state_t >*
      mutable_point_state();
  const ::google::protobuf::RepeatedPtrField< ::point_state_t >&
      point_state() const;

  // int64 time_limit = 1;
  void clear_time_limit();
  static const int kTimeLimitFieldNumber = 1;
  ::google::protobuf::int64 time_limit() const;
  void set_time_limit(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:board_state)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::point_state_t > point_state_;
  ::google::protobuf::int64 time_limit_;
  mutable int _cached_size_;
  friend struct protobuf_rpc_5fmessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class player_move : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:player_move) */ {
 public:
  player_move();
  virtual ~player_move();

  player_move(const player_move& from);

  inline player_move& operator=(const player_move& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const player_move& default_instance();

  static inline const player_move* internal_default_instance() {
    return reinterpret_cast<const player_move*>(
               &_player_move_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(player_move* other);

  // implements Message ----------------------------------------------

  inline player_move* New() const PROTOBUF_FINAL { return New(NULL); }

  player_move* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const player_move& from);
  void MergeFrom(const player_move& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(player_move* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .point_state_t move = 1;
  int move_size() const;
  void clear_move();
  static const int kMoveFieldNumber = 1;
  const ::point_state_t& move(int index) const;
  ::point_state_t* mutable_move(int index);
  ::point_state_t* add_move();
  ::google::protobuf::RepeatedPtrField< ::point_state_t >*
      mutable_move();
  const ::google::protobuf::RepeatedPtrField< ::point_state_t >&
      move() const;

  // @@protoc_insertion_point(class_scope:player_move)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::point_state_t > move_;
  mutable int _cached_size_;
  friend struct protobuf_rpc_5fmessage_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// point_t

// int32 x = 1;
inline void point_t::clear_x() {
  x_ = 0;
}
inline ::google::protobuf::int32 point_t::x() const {
  // @@protoc_insertion_point(field_get:point_t.x)
  return x_;
}
inline void point_t::set_x(::google::protobuf::int32 value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:point_t.x)
}

// int32 y = 2;
inline void point_t::clear_y() {
  y_ = 0;
}
inline ::google::protobuf::int32 point_t::y() const {
  // @@protoc_insertion_point(field_get:point_t.y)
  return y_;
}
inline void point_t::set_y(::google::protobuf::int32 value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:point_t.y)
}

// -------------------------------------------------------------------

// point_state_t

// .point_t point = 1;
inline bool point_state_t::has_point() const {
  return this != internal_default_instance() && point_ != NULL;
}
inline void point_state_t::clear_point() {
  if (GetArenaNoVirtual() == NULL && point_ != NULL) delete point_;
  point_ = NULL;
}
inline const ::point_t& point_state_t::point() const {
  // @@protoc_insertion_point(field_get:point_state_t.point)
  return point_ != NULL ? *point_
                         : *::point_t::internal_default_instance();
}
inline ::point_t* point_state_t::mutable_point() {
  
  if (point_ == NULL) {
    point_ = new ::point_t;
  }
  // @@protoc_insertion_point(field_mutable:point_state_t.point)
  return point_;
}
inline ::point_t* point_state_t::release_point() {
  // @@protoc_insertion_point(field_release:point_state_t.point)
  
  ::point_t* temp = point_;
  point_ = NULL;
  return temp;
}
inline void point_state_t::set_allocated_point(::point_t* point) {
  delete point_;
  point_ = point;
  if (point) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:point_state_t.point)
}

// int32 unit_type = 2;
inline void point_state_t::clear_unit_type() {
  unit_type_ = 0;
}
inline ::google::protobuf::int32 point_state_t::unit_type() const {
  // @@protoc_insertion_point(field_get:point_state_t.unit_type)
  return unit_type_;
}
inline void point_state_t::set_unit_type(::google::protobuf::int32 value) {
  
  unit_type_ = value;
  // @@protoc_insertion_point(field_set:point_state_t.unit_type)
}

// -------------------------------------------------------------------

// board_state

// int64 time_limit = 1;
inline void board_state::clear_time_limit() {
  time_limit_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 board_state::time_limit() const {
  // @@protoc_insertion_point(field_get:board_state.time_limit)
  return time_limit_;
}
inline void board_state::set_time_limit(::google::protobuf::int64 value) {
  
  time_limit_ = value;
  // @@protoc_insertion_point(field_set:board_state.time_limit)
}

// repeated .point_state_t point_state = 2;
inline int board_state::point_state_size() const {
  return point_state_.size();
}
inline void board_state::clear_point_state() {
  point_state_.Clear();
}
inline const ::point_state_t& board_state::point_state(int index) const {
  // @@protoc_insertion_point(field_get:board_state.point_state)
  return point_state_.Get(index);
}
inline ::point_state_t* board_state::mutable_point_state(int index) {
  // @@protoc_insertion_point(field_mutable:board_state.point_state)
  return point_state_.Mutable(index);
}
inline ::point_state_t* board_state::add_point_state() {
  // @@protoc_insertion_point(field_add:board_state.point_state)
  return point_state_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::point_state_t >*
board_state::mutable_point_state() {
  // @@protoc_insertion_point(field_mutable_list:board_state.point_state)
  return &point_state_;
}
inline const ::google::protobuf::RepeatedPtrField< ::point_state_t >&
board_state::point_state() const {
  // @@protoc_insertion_point(field_list:board_state.point_state)
  return point_state_;
}

// -------------------------------------------------------------------

// player_move

// repeated .point_state_t move = 1;
inline int player_move::move_size() const {
  return move_.size();
}
inline void player_move::clear_move() {
  move_.Clear();
}
inline const ::point_state_t& player_move::move(int index) const {
  // @@protoc_insertion_point(field_get:player_move.move)
  return move_.Get(index);
}
inline ::point_state_t* player_move::mutable_move(int index) {
  // @@protoc_insertion_point(field_mutable:player_move.move)
  return move_.Mutable(index);
}
inline ::point_state_t* player_move::add_move() {
  // @@protoc_insertion_point(field_add:player_move.move)
  return move_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::point_state_t >*
player_move::mutable_move() {
  // @@protoc_insertion_point(field_mutable_list:player_move.move)
  return &move_;
}
inline const ::google::protobuf::RepeatedPtrField< ::point_state_t >&
player_move::move() const {
  // @@protoc_insertion_point(field_list:player_move.move)
  return move_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_rpc_5fmessage_2eproto__INCLUDED
